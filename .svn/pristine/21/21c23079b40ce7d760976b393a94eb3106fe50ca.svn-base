#!/bin/bash

progname=testdaemon
pidfile=/var/run/$progname
rundir=`pwd`

do_start() {

	if [ -f $pidfile ] 
	then
		echo "$progname already running!";
		exit 1;
	fi
	
	export ZOOKEEPER_URL=`cat /opt/deploy-nodeagent/zookeeper`
	
	cd $rundir
	
	java -XX:MaxPermSize=128m -Xmx1024m -jar core2-daemon-framework-0.0.1-SNAPSHOT.jar &
	
	if [ $? -gt 0 ]; then
		echo "Start failed with exit code $?"
		exit $?;
	fi
	
	pid=$!
	echo "$pid" > $pidfile

	# wait for process to start
	sleep 4

	if [ `ps --pid $pid 2> /dev/null | grep -c $pid 2> /dev/null` -eq '0' ]; then
		echo "Process did not start!"
		rm -f $pidfile
		exit 1;
	fi 

	
	echo "Started with PID: $pid"
	
	exit 0;
}

do_stop() {

	if [ -f $pidfile ] 
	then
		pid=`cat $pidfile`
		echo "Stopping $pid"
		
		kill -s TERM $pid > /dev/null
		rm -f $pidfile
		
		count=0;
		until [ `ps --pid $pid 2> /dev/null | grep -c $pid 2> /dev/null` -eq '0' ] || [ $count -gt 10 ]
    	do
      		sleep 1
      		let count=$count+1;
    	done

    	if [ $count -gt 10 ]; then
    		echo "Force stop of $progname"
      		kill -9 $pid
    	fi
    	
    	echo "Stopped"
		
		exit 0;
	fi
}

do_status() {
	
	if [ -f $pidfile ] 
	then
		pid=`cat $pidfile`
		echo "$progname is running with PID $pid"
	else
		echo "$progname is not running"
	fi

}


case "$1" in
start)  echo "Starting $progname"
        do_start
        ;;
stop)  echo "Stopping $progname"
        do_stop
        ;;
status)  
        do_status
        ;;
*)      echo "Usage: service $progname start|stop|status"
        exit 1
        ;;
esac
exit 0
