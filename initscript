#!/bin/bash

###
# chkconfig: 235 20 80
# description: 
###

progname=testdaemon
pidfile=/var/run/$progname
RUNDIR=/opt/$progname
RUNUSER=root
JAR_FILE=my-jarfile.jar
JAVA_OPTS="-XX:MaxPermSize=128m -Xmx1024m"

do_start() {

	if [ -f $pidfile ] 
	then
		echo "$progname already running!";
		exit 1;
	fi
	
	# encoding will be broken otherwise
	export LANG=en_US.UTF-8
	
	cd $RUNDIR
	
	pid=$(su -m -c "java $JAVA_OPTS -jar $JAR_FILE > /dev/null & echo \$! " "$RUNUSER")
		
	echo "$pid" > $pidfile

	# wait for process to start
	sleep 4

	if [ `ps --pid $pid 2> /dev/null | grep -c $pid 2> /dev/null` -eq '0' ]; then
		echo "Process did not start!"
		rm -f $pidfile
		exit 1;
	fi 

	echo "Started with PID: $pid"	
	exit 0;
}

do_stop() {

	if [ -f $pidfile ] 
	then
		pid=`cat $pidfile`
		echo "Stopping $pid"
		
		kill -s TERM $pid > /dev/null
		rm -f $pidfile
		
		count=0;
		until [ `ps --pid $pid 2> /dev/null | grep -c $pid 2> /dev/null` -eq '0' ] || [ $count -gt 10 ]
    	do
      		sleep 1
      		let count=$count+1;
    	done

    	if [ $count -gt 10 ]; then
    		echo "Force stop of $progname"
      		kill -9 $pid
    	fi
    	
    	echo "Stopped"
		
		exit 0;
	fi
}

do_signal() {

	if [ -f $pidfile ] 
	then
		pid=`cat $pidfile`
		kill -s USR2 $pid > /dev/null
		exit 0;
	fi
}

do_status() {
	
	if [ -f $pidfile ] 
    then
    	pid=`cat $pidfile`
        res=`ps --pid $pid 2> /dev/null | grep -c $pid 2> /dev/null`
        if [ $res -eq '0' ]
        then
            rm -f $pidfile > /dev/null
            echo "$progname is not running" 
            exit 1;
        else
            echo "$progname is running with PID $pid" 
            exit 0;
        fi
    else
        echo "$progname is not running" 
        exit 3;
    fi

}


case "$1" in
start)  echo "Starting $progname"
        do_start
        ;;
stop)  echo "Stopping $progname"
        do_stop
        ;;
status)  
        do_status
        ;;
restart)
		do_stop
		do_start
		;;
signal) 
		do_signal
		;;
*)      echo "Usage: service $progname start|stop|status|restart|signal"
        exit 1
        ;;
esac
exit 0
